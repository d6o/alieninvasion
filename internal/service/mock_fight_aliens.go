// Code generated by MockGen. DO NOT EDIT.
// Source: fight_aliens.go

// Package service is a generated GoMock package.
package service

import (
	context "context"
	reflect "reflect"

	model "github.com/d6o/alieninvasion/internal/model"
	gomock "github.com/golang/mock/gomock"
)

// MockcityRemover is a mock of cityRemover interface.
type MockcityRemover struct {
	ctrl     *gomock.Controller
	recorder *MockcityRemoverMockRecorder
}

// MockcityRemoverMockRecorder is the mock recorder for MockcityRemover.
type MockcityRemoverMockRecorder struct {
	mock *MockcityRemover
}

// NewMockcityRemover creates a new mock instance.
func NewMockcityRemover(ctrl *gomock.Controller) *MockcityRemover {
	mock := &MockcityRemover{ctrl: ctrl}
	mock.recorder = &MockcityRemoverMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockcityRemover) EXPECT() *MockcityRemoverMockRecorder {
	return m.recorder
}

// Remove mocks base method.
func (m *MockcityRemover) Remove(ctx context.Context, city *model.City) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Remove", ctx, city)
}

// Remove indicates an expected call of Remove.
func (mr *MockcityRemoverMockRecorder) Remove(ctx, city interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Remove", reflect.TypeOf((*MockcityRemover)(nil).Remove), ctx, city)
}

// Mockprinter is a mock of printer interface.
type Mockprinter struct {
	ctrl     *gomock.Controller
	recorder *MockprinterMockRecorder
}

// MockprinterMockRecorder is the mock recorder for Mockprinter.
type MockprinterMockRecorder struct {
	mock *Mockprinter
}

// NewMockprinter creates a new mock instance.
func NewMockprinter(ctrl *gomock.Controller) *Mockprinter {
	mock := &Mockprinter{ctrl: ctrl}
	mock.recorder = &MockprinterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *Mockprinter) EXPECT() *MockprinterMockRecorder {
	return m.recorder
}

// CityDestroyed mocks base method.
func (m *Mockprinter) CityDestroyed(city *model.City, aliens map[int]*model.Alien) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CityDestroyed", city, aliens)
	ret0, _ := ret[0].(error)
	return ret0
}

// CityDestroyed indicates an expected call of CityDestroyed.
func (mr *MockprinterMockRecorder) CityDestroyed(city, aliens interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CityDestroyed", reflect.TypeOf((*Mockprinter)(nil).CityDestroyed), city, aliens)
}
